#!/sbin/runscript

# backward compatibility for existing gentoo layout 
#
if [ -d "/var/lib/chickadee/.chickadee" ]; then
	CHICKADEED_DEFAULT_DATADIR="/var/lib/chickadee/.chickadee"
else
	CHICKADEED_DEFAULT_DATADIR="/var/lib/chickadeed"
fi

CHICKADEED_CONFIGFILE=${CHICKADEED_CONFIGFILE:-/etc/chickadee/chickadee.conf}
CHICKADEED_PIDDIR=${CHICKADEED_PIDDIR:-/var/run/chickadeed}
CHICKADEED_PIDFILE=${CHICKADEED_PIDFILE:-${CHICKADEED_PIDDIR}/chickadeed.pid}
CHICKADEED_DATADIR=${CHICKADEED_DATADIR:-${CHICKADEED_DEFAULT_DATADIR}}
CHICKADEED_USER=${CHICKADEED_USER:-${CHICKADEE_USER:-chickadee}}
CHICKADEED_GROUP=${CHICKADEED_GROUP:-chickadee}
CHICKADEED_BIN=${CHICKADEED_BIN:-/usr/bin/chickadeed}
CHICKADEED_NICE=${CHICKADEED_NICE:-${NICELEVEL:-0}}
CHICKADEED_OPTS="${CHICKADEED_OPTS:-${CHICKADEE_OPTS}}"

name="Chickadee Core Daemon"
description="Chickadee cryptocurrency P2P network daemon"

command="/usr/bin/chickadeed"
command_args="-pid=\"${CHICKADEED_PIDFILE}\" \
		-conf=\"${CHICKADEED_CONFIGFILE}\" \
		-datadir=\"${CHICKADEED_DATADIR}\" \
		-daemon \
		${CHICKADEED_OPTS}"

required_files="${CHICKADEED_CONFIGFILE}"
start_stop_daemon_args="-u ${CHICKADEED_USER} \
			-N ${CHICKADEED_NICE} -w 2000"
pidfile="${CHICKADEED_PIDFILE}"

# The retry schedule to use when stopping the daemon. Could be either
# a timeout in seconds or multiple signal/timeout pairs (like
# "SIGKILL/180 SIGTERM/300")
retry="${CHICKADEED_SIGTERM_TIMEOUT}"

depend() {
	need localmount net
}

# verify
# 1) that the datadir exists and is writable (or create it)
# 2) that a directory for the pid exists and is writable
# 3) ownership and permissions on the config file
start_pre() {
	checkpath \
	-d \
	--mode 0750 \
	--owner "${CHICKADEED_USER}:${CHICKADEED_GROUP}" \
	"${CHICKADEED_DATADIR}"

	checkpath \
	-d \
	--mode 0755 \
	--owner "${CHICKADEED_USER}:${CHICKADEED_GROUP}" \
	"${CHICKADEED_PIDDIR}"

	checkpath -f \
	-o ${CHICKADEED_USER}:${CHICKADEED_GROUP} \
	-m 0660 \
	${CHICKADEED_CONFIGFILE}

	checkconfig || return 1
}

checkconfig()
{
	if ! grep -qs '^rpcpassword=' "${CHICKADEED_CONFIGFILE}" ; then
		eerror ""
		eerror "ERROR: You must set a secure rpcpassword to run chickadeed."
		eerror "The setting must appear in ${CHICKADEED_CONFIGFILE}"
		eerror ""
		eerror "This password is security critical to securing wallets "
		eerror "and must not be the same as the rpcuser setting."
		eerror "You can generate a suitable random password using the following "
		eerror "command from the shell:"
		eerror ""
		eerror "bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'"
		eerror ""
		eerror "It is recommended that you also set alertnotify so you are "
		eerror "notified of problems:"
		eerror ""
		eerror "ie: alertnotify=echo %%s | mail -s \"Chickadee Alert\"" \
			"admin@foo.com"
		eerror ""
		return 1
	fi
}
